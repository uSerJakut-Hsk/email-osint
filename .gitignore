# Advanced Email OSINT Tool - .gitignore
# September 2025

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to not include .idea/ in version control.
.idea/

# Project-specific ignores
# =======================

# Results directory - contains search outputs
results/
!results/.gitkeep

# Proxy configuration - may contain sensitive data
proxies.txt

# Environment variables - contains API keys and sensitive config
.env
.env.local
.env.*.local

# Logs
*.log
logs/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Browser profiles and cache (Selenium)
browser_profiles/
.browser_cache/

# Screenshots (if any)
screenshots/
*.png
*.jpg
*.jpeg
*.gif
!docs/*.png
!docs/*.jpg

# API keys and credentials
api_keys.txt
credentials.json
secrets.json

# Database files
*.db
*.sqlite
*.sqlite3

# Config files with sensitive data
config/local_*
config/production_*
config/secrets_*

# Backup files
*.bak
*.backup
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.stackdump

# Custom data files
data/
datasets/
custom_platforms.json

# IDE and editor files
.vscode/
*.swp
*.swo
*~

# Output archives
*.zip
*.tar.gz
*.rar
*.7z

# Performance profiling files
*.prof

# Memory dumps
*.dmp

# Certificate files
*.pem
*.key
*.crt
*.cer

# Docker files (if using containers)
.dockerignore
docker-compose.override.yml

# Kubernetes configs
k8s/secrets/

# Terraform state files
*.tfstate
*.tfstate.*

# Local development scripts
dev_*
test_local_*
debug_*

# Custom user configurations
user_config.json
my_platforms.json
personal_*.py

# Selenium webdriver binaries (managed by webdriver-manager)
webdrivers/
chromedriver*
geckodriver*
edgedriver*

# Large data files
*.csv.gz
*.json.gz
large_data/

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Virtual environment directories
venv/
env/
.venv/
.env/

# Python cache directories
.pytest_cache/
.coverage

# Package files
*.egg-info/
dist/
build/

# Documentation build files
docs/_build/
docs/build/

# Local test files
test_*.py.local
*_test_local.py

# Configuration backups
config.bak
settings.bak

# User-specific platform lists
platforms_personal.json
my_proxies.txt

# Report templates (user customizations)
templates/custom/